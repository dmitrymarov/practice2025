import os

EXCLUDE_DIRS = {".git", ".github", "__pycache__", "venv", "node_modules"}
EXCLUDE_FILES = {".gitignore", "README.md", "STRUCTURE.md"}

def generate_tree(directory, prefix=""):
    """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –≤ –≤–∏–¥–µ Markdown."""
    if not os.path.exists(directory):
        return "‚ö† –£–∫–∞–∑–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!\n"

    entries = sorted(os.listdir(directory))
    entries = [e for e in entries if e not in EXCLUDE_FILES]
    tree_md = ""

    for index, entry in enumerate(entries):
        path = os.path.join(directory, entry)
        is_last = index == len(entries) - 1
        connector = "‚îî‚îÄ‚îÄ " if is_last else "‚îú‚îÄ‚îÄ "

        if os.path.isdir(path) and entry not in EXCLUDE_DIRS:
            tree_md += f"{prefix}{connector} **{entry}/**\n"
            tree_md += generate_tree(path, prefix + ("    " if is_last else "‚îÇ   "))

        elif os.path.isfile(path):
            tree_md += f"{prefix}{connector} {entry}\n"

    return tree_md

def save_structure():
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –∏ —Å–æ–∑–¥–∞–µ—Ç STRUCTURE.md."""
    root_dir = input("–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞: ").strip()

    if not os.path.exists(root_dir):
        print("‚ùå –û—à–∏–±–∫–∞: —É–∫–∞–∑–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        return
    
    tree = f"# üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n\n```\n{generate_tree(root_dir)}```\n"
    
    output_file = os.path.join(root_dir, "STRUCTURE.md")
    with open(output_file, "w", encoding="utf-8") as f:
        f.write(tree)
    
    print(f"‚úÖ –§–∞–π–ª STRUCTURE.md —Å–æ–∑–¥–∞–Ω –≤ –ø–∞–ø–∫–µ: {root_dir}")

if __name__ == "__main__":
    save_structure()
